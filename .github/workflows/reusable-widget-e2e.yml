# This is a basic workflow to help you get started with Actions
name: Test E2E WIDGET

# Controls when the action will run. Triggers the workflow on push or pull request
on:
  workflow_call:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  e2e_widget:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    timeout-minutes: 80

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-project
        id: setup-project
        with:
          cypress_version: 10.1.0
      - uses: mansagroup/nrwl-nx-action@v3
        with:
          targets: lint
          projects: '@novu/widget'

      # Runs a single command using the runners shell
      - name: Build
        run: CI=false pnpm build:embed

      # Runs a single command using the runners shell
      - name: Build
        run: CI=false pnpm build:widget

      - name: Build API
        run: CI='' pnpm build:api

      # Runs a single command using the runners shell
      - name: Start Client
        run: pnpm start:widget:test &

      - name: Start WS
        run: pnpm start:ws:test &

      - name: Start API in TEST
        run: cd apps/api && pnpm start:test &

      - name: Install wait-on plugin
        run: npm i -g wait-on
      - name: Wait on API
        run: wait-on --timeout=180000 http://localhost:1336/v1/health-check

      - name: Wait on WS
        run: wait-on --timeout=180000 http://localhost:1340/v1/health-check

      - name: Wait on WIDGET
        run: wait-on --timeout=180000 http://localhost:3500

      - name: Cypress install
        if: steps.setup-project.outputs.cypress_cache_hit != 'true'
        working-directory: apps/widget
        run: pnpm cypress install

      - name: Cypress run
        uses: cypress-io/github-action@v2
        env:
          NODE_ENV: test
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_WIDGET_KEY }}
        with:
          working-directory: apps/widget
          wait-on: http://localhost:3500
          browser: chrome
          install: false
          record: true
          parallel: false
          headless: true
          config-file: cypress.config.ts
